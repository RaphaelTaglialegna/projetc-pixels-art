{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-08-14T15:58:49.970Z",
    "end": "2021-08-14T16:00:07.535Z",
    "duration": 77565,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "968993e7-e73e-4299-abf4-edb8a79377f1",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c4f707f-9170-48a5-8160-6ce3bd58059b",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "d0336316-e815-4de5-a36e-73284f1305f9",
              "parentUUID": "1c4f707f-9170-48a5-8160-6ce3bd58059b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0336316-e815-4de5-a36e-73284f1305f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f7f715e7-b915-4964-81af-dc909d5be683",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "a05d3328-a584-4041-a50e-de2b93e660d9",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "a3471539-9b6a-4c43-ad62-c3bc2f358b67",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "cf3b8fc0-9527-4142-ba1f-ac531b335470",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3786e2cf-20bd-489b-9ee6-20b392a5a0ad",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "a02f79dd-2241-430d-9466-8715e7cd657f",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "3574b354-33b7-40ea-8b47-91cc4989c61a",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f7f035ae-2ddd-4dd6-b203-0e0a93ee8dc1",
              "parentUUID": "f7f715e7-b915-4964-81af-dc909d5be683",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a05d3328-a584-4041-a50e-de2b93e660d9",
            "a3471539-9b6a-4c43-ad62-c3bc2f358b67",
            "cf3b8fc0-9527-4142-ba1f-ac531b335470",
            "3786e2cf-20bd-489b-9ee6-20b392a5a0ad",
            "a02f79dd-2241-430d-9466-8715e7cd657f",
            "3574b354-33b7-40ea-8b47-91cc4989c61a",
            "f7f035ae-2ddd-4dd6-b203-0e0a93ee8dc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "45fa6a06-d659-4193-a114-7514daa9d8bd",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "11ea4b12-8803-4925-9cbf-1cb7fcc6cccf",
              "parentUUID": "45fa6a06-d659-4193-a114-7514daa9d8bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bef7b0ad-3b67-4800-b4df-5ae0838fdff6",
              "parentUUID": "45fa6a06-d659-4193-a114-7514daa9d8bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11ea4b12-8803-4925-9cbf-1cb7fcc6cccf",
            "bef7b0ad-3b67-4800-b4df-5ae0838fdff6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 228,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fdc0eaa6-cf27-43fc-97ad-45aec380dc7b",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "b8461c7e-4ff2-4e5a-885e-21b600e298e6",
              "parentUUID": "fdc0eaa6-cf27-43fc-97ad-45aec380dc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "c77e2a73-f056-40d7-8f44-10c70121914f",
              "parentUUID": "fdc0eaa6-cf27-43fc-97ad-45aec380dc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "462c1bb5-4a16-4317-b5ae-80623a918dd0",
              "parentUUID": "fdc0eaa6-cf27-43fc-97ad-45aec380dc7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "04916709-1d17-4ee5-806c-08ff9d7dc28c",
              "parentUUID": "fdc0eaa6-cf27-43fc-97ad-45aec380dc7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8461c7e-4ff2-4e5a-885e-21b600e298e6",
            "c77e2a73-f056-40d7-8f44-10c70121914f",
            "462c1bb5-4a16-4317-b5ae-80623a918dd0",
            "04916709-1d17-4ee5-806c-08ff9d7dc28c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4f6f9e0-e1a7-4ec0-a376-96626ba29e33",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "46e94463-c95a-4090-8ecf-361a123a69ef",
              "parentUUID": "a4f6f9e0-e1a7-4ec0-a376-96626ba29e33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "168ab405-0239-49b4-8736-a5dd1b1cde39",
              "parentUUID": "a4f6f9e0-e1a7-4ec0-a376-96626ba29e33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46e94463-c95a-4090-8ecf-361a123a69ef",
            "168ab405-0239-49b4-8736-a5dd1b1cde39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 429,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "efadd006-ef59-4114-957e-09d75ca8e456",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f18c6572-e764-4025-ab78-c8f3e4f468a1",
              "parentUUID": "efadd006-ef59-4114-957e-09d75ca8e456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "2ee30076-3d7f-4820-a5f3-58ca73cec6f8",
              "parentUUID": "efadd006-ef59-4114-957e-09d75ca8e456",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f18c6572-e764-4025-ab78-c8f3e4f468a1",
            "2ee30076-3d7f-4820-a5f3-58ca73cec6f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65632ac0-accd-4b2e-985c-d2efa079b95f",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "ec3f76db-fd87-447a-a11d-af1fbe6a7f14",
              "parentUUID": "65632ac0-accd-4b2e-985c-d2efa079b95f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "0af739f3-9285-4c5e-9323-b8bf1666aba8",
              "parentUUID": "65632ac0-accd-4b2e-985c-d2efa079b95f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec3f76db-fd87-447a-a11d-af1fbe6a7f14",
            "0af739f3-9285-4c5e-9323-b8bf1666aba8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8844,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "34da092c-dde9-4966-a985-9f7fe4548cc1",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "fdee7775-72b2-4c52-a3bf-6afb3ef48fb7",
              "parentUUID": "34da092c-dde9-4966-a985-9f7fe4548cc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8374,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a056eed0-08bd-47db-ae27-22ecade37ae3",
              "parentUUID": "34da092c-dde9-4966-a985-9f7fe4548cc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ea339ba0-8bdc-4bf7-93d3-4b878d98ae92",
              "parentUUID": "34da092c-dde9-4966-a985-9f7fe4548cc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fdee7775-72b2-4c52-a3bf-6afb3ef48fb7",
            "a056eed0-08bd-47db-ae27-22ecade37ae3",
            "ea339ba0-8bdc-4bf7-93d3-4b878d98ae92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11670,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8410f6b9-48b9-4a3d-bb66-a223ee548fe3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "08c14d10-0c3c-4b33-a314-f3d18afc6ef8",
              "parentUUID": "8410f6b9-48b9-4a3d-bb66-a223ee548fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "650277aa-7710-4df2-9871-45a814b4e9e5",
              "parentUUID": "8410f6b9-48b9-4a3d-bb66-a223ee548fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "67d21d31-b518-42b6-9011-731272c46bd5",
              "parentUUID": "8410f6b9-48b9-4a3d-bb66-a223ee548fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "42b12c0d-2b22-431d-b862-ff28f719d902",
              "parentUUID": "8410f6b9-48b9-4a3d-bb66-a223ee548fe3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08c14d10-0c3c-4b33-a314-f3d18afc6ef8",
            "650277aa-7710-4df2-9871-45a814b4e9e5",
            "67d21d31-b518-42b6-9011-731272c46bd5",
            "42b12c0d-2b22-431d-b862-ff28f719d902"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2754f68-8538-414d-addc-4c5e5b48655d",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "95b36bc7-fdd3-408c-9918-f0004540dcdf",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5236cb94-3141-4ebe-b65a-b4a7447d0ed6",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4219,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b069b030-0904-49a1-bc99-8f9dfbd57b48",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "44123f9e-0273-4bc8-893b-4569bdd2b990",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e55a11d9-0a92-4b6a-ad10-ff975fd20fe9",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4206,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ed0bcec7-b9dd-4a0a-bbb3-ddbbc09e4f3b",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "52469c87-90e1-4d9e-b85e-207626c42cc9",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4226,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f9dee3e8-fc96-4e54-adcc-f3a36533fc72",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4230,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "16e192b1-0d45-4dbc-9535-9ebc747e113c",
              "parentUUID": "a2754f68-8538-414d-addc-4c5e5b48655d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "95b36bc7-fdd3-408c-9918-f0004540dcdf",
            "5236cb94-3141-4ebe-b65a-b4a7447d0ed6",
            "b069b030-0904-49a1-bc99-8f9dfbd57b48",
            "44123f9e-0273-4bc8-893b-4569bdd2b990",
            "e55a11d9-0a92-4b6a-ad10-ff975fd20fe9",
            "ed0bcec7-b9dd-4a0a-bbb3-ddbbc09e4f3b",
            "52469c87-90e1-4d9e-b85e-207626c42cc9",
            "f9dee3e8-fc96-4e54-adcc-f3a36533fc72",
            "16e192b1-0d45-4dbc-9535-9ebc747e113c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38113,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1e101d09-9554-462b-881a-f08e6cea172f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4249,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0fa3dd33-a1d5-48f7-9860-11b70d70394d",
              "parentUUID": "1e101d09-9554-462b-881a-f08e6cea172f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "be3604d0-c880-4e98-9fdc-2a1438c0894d",
              "parentUUID": "1e101d09-9554-462b-881a-f08e6cea172f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43071/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43071/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43071/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43071/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43071/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43071/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43071/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43071/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43071/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43071/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43071/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a2629b4e-b5d7-4e09-808a-97343b427827",
              "parentUUID": "1e101d09-9554-462b-881a-f08e6cea172f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0fa3dd33-a1d5-48f7-9860-11b70d70394d",
            "be3604d0-c880-4e98-9fdc-2a1438c0894d",
            "a2629b4e-b5d7-4e09-808a-97343b427827"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ddfb482-b822-4738-a8b2-fcde1a43c52f",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 485,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "18bfe1ae-d590-495f-b0a1-6e706d18681a",
              "parentUUID": "6ddfb482-b822-4738-a8b2-fcde1a43c52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "6c024a47-b888-420f-a310-c30158039f2c",
              "parentUUID": "6ddfb482-b822-4738-a8b2-fcde1a43c52f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18bfe1ae-d590-495f-b0a1-6e706d18681a",
            "6c024a47-b888-420f-a310-c30158039f2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}